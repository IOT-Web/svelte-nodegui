(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{102:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(2),i=n(6),r=(n(0),n(133)),o={sidebar_label:"Images",title:"Images"},l={unversionedId:"guides/images",id:"guides/images",isDocsHomePage:!1,title:"Images",description:"Images are very important for making your app more interesting.",source:"@site/docs/guides/images.md",slug:"/guides/images",permalink:"/docs/guides/images",version:"current",sidebar_label:"Images",sidebar:"guides",previous:{title:"Scroll Area",permalink:"/docs/guides/scroll-view"},next:{title:"Networking",permalink:"/docs/guides/networking"}},s=[{value:"Some tips",id:"some-tips",children:[{value:"Showing large images",id:"showing-large-images",children:[]},{value:"Animated images",id:"animated-images",children:[]},{value:"Loading an image from a buffer",id:"loading-an-image-from-a-buffer",children:[]}]}],c={rightToc:s};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Images are very important for making your app more interesting."),Object(r.b)("p",null,"In Svelte NodeGui, ",Object(r.b)("inlineCode",{parentName:"p"},"<image>")," is used to display an image."),Object(r.b)("p",null,"Internally Image is a QLabel. QLabel is typically used for displaying text, but it can also display an image.\nWhat this means is that you can pass all the props you pass to a ",Object(r.b)("inlineCode",{parentName:"p"},"<text>")," to ",Object(r.b)("inlineCode",{parentName:"p"},"<image>")," also."),Object(r.b)("p",null,"A very minimal example would look like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<script lang="ts">\n  import { onMount } from "svelte";\n  import { QLabelSignals, QMouseEvent, WidgetEventTypes } from "@nodegui/nodegui";\n  let win;\n\n  onMount(() => {\n    (window as any).win = win; // Prevent garbage collection.\n    win.nativeView.show();\n    return () => {\n      delete (window as any).win;\n    };\n  });\n<\/script>\n\n<window bind:this={win}>\n    <image src="https://docs.nodegui.org/img/logo-circle.png" />\n</window>\n')),Object(r.b)("p",null,"Here,"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Image is a native QLabel component that sets the image as its pixmap.")),Object(r.b)("p",null,"The result would look like this:"),Object(r.b)("img",{src:"https://github.com/nodegui/react-nodegui/releases/download/assets/images.png",alt:"image example",style:{width:"100%",maxWidth:400}}),Object(r.b)("h2",{id:"some-tips"},"Some tips"),Object(r.b)("h3",{id:"showing-large-images"},"Showing large images"),Object(r.b)("p",null,"The above examples wont allow you to show a huge image without either cutting it off or making the widget huge."),Object(r.b)("p",null,"In order to do that:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"You can create the image instance using ",Object(r.b)("inlineCode",{parentName:"li"},"<image>")),Object(r.b)("li",{parentName:"ul"},"Set the image instance as a child to a ",Object(r.b)("inlineCode",{parentName:"li"},"<scrollArea>"))),Object(r.b)("h3",{id:"animated-images"},"Animated images"),Object(r.b)("p",null,"In order to use animated images, instead of ",Object(r.b)("inlineCode",{parentName:"p"},"<image>")," use ",Object(r.b)("inlineCode",{parentName:"p"},"<animatedImage>")),Object(r.b)("h3",{id:"loading-an-image-from-a-buffer"},"Loading an image from a buffer"),Object(r.b)("p",null,"Lets say we want to load an image from a buffer. In this case we can't use the ",Object(r.b)("inlineCode",{parentName:"p"},"src")," prop since its only reserved for local file system path or urls."),Object(r.b)("p",null,"In this case use the ",Object(r.b)("inlineCode",{parentName:"p"},"buffer")," prop."))}u.isMDXComponent=!0},133:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return g}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),u=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),b=a,g=p["".concat(o,".").concat(b)]||p[b]||m[b]||r;return n?i.a.createElement(g,l(l({ref:t},c),{},{components:n})):i.a.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);